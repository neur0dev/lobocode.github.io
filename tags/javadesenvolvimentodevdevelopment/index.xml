<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java,desenvolvimento,dev,development on lobocode</title>
    <link>https://lobocode.github.io/tags/javadesenvolvimentodevdevelopment/</link>
    <description>Recent content in java,desenvolvimento,dev,development on lobocode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Vitor Lobo</copyright>
    <lastBuildDate>Mon, 05 Dec 2022 17:31:45 -0300</lastBuildDate><atom:link href="https://lobocode.github.io/tags/javadesenvolvimentodevdevelopment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java#Core - Collections</title>
      <link>https://lobocode.github.io/2022/12/05/collections/</link>
      <pubDate>Mon, 05 Dec 2022 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2022/12/05/collections/</guid>
      <description>Diferentemente de arrays convencionais que servem para armazenar diversos objetos e que é inicializado com um tamanho predefinido durante a instanciação, as collections são estruturas que processam um conjunto de dados que são encapsulados e os dados só são acessados por meio de métodos. Na prática as collections usam matrizes para armazenamento com a diferença na simplificação do gerenciamento dinâmico dos dados. Por exemplo, imagine que sua aplicação salva os dados em um objeto do tipo Pessoas.</description>
    </item>
    
  </channel>
</rss>
