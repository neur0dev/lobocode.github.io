<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java,desenvolvimento,dev,development on lobocode</title>
    <link>https://lobocode.github.io/tags/javadesenvolvimentodevdevelopment/</link>
    <description>Recent content in java,desenvolvimento,dev,development on lobocode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Vitor Lobo</copyright>
    <lastBuildDate>Thu, 08 Dec 2022 17:31:45 -0300</lastBuildDate><atom:link href="https://lobocode.github.io/tags/javadesenvolvimentodevdevelopment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java#Core - Collections</title>
      <link>https://lobocode.github.io/2022/12/05/collections/</link>
      <pubDate>Mon, 05 Dec 2022 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2022/12/05/collections/</guid>
      <description>Streams foram adicionadas no Java 8 complicando substancialmente a tarefa de escolher o tipo de retorno mais adequado para um método que retornasse uma sequência. Afinal, agora podemos usar as streams para retornar uma sequência de elementos. No entanto, escrever um bom código exige uma combinação sensata de streams e iterações. Outro ponto é que utilizar excessivamente as streams faz com que os programas fiquem difíceis de se ler e de fazer manutenção.</description>
    </item>
    
    <item>
      <title>Java#Core - Read and Write</title>
      <link>https://lobocode.github.io/2022/12/08/javaio/</link>
      <pubDate>Thu, 08 Dec 2022 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2022/12/08/javaio/</guid>
      <description>Dados armazenados em variáveis e arrays são temporários eles são perdidos quando programa termina. Para retenção persistente de longo prazo podemos usar o registro destes dados em arquivos. Felizmente, várias linguagens orientadas a objetos (incluindo Java) fornecem maneiras de gravá-los e lê-los de arquivos (conhecidas como serialização e desserialização de objetos). Para ilustrar isso, recriamos alguns de nossos programas de acesso sequencial que utilizaram arquivos de texto, dessa vez armazenando e recuperando objetos de arquivos binários.</description>
    </item>
    
  </channel>
</rss>
