<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lobocode</title>
    <link>https://lobocode.github.io/</link>
    <description>Recent content on lobocode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Vitor Lobo</copyright>
    <lastBuildDate>Thu, 08 Dec 2022 17:31:45 -0300</lastBuildDate><atom:link href="https://lobocode.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java#Core - Collections</title>
      <link>https://lobocode.github.io/2022/12/05/collections/</link>
      <pubDate>Mon, 05 Dec 2022 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2022/12/05/collections/</guid>
      <description>Streams foram adicionadas no Java 8 complicando substancialmente a tarefa de escolher o tipo de retorno mais adequado para um método que retornasse uma sequência. Afinal, agora podemos usar as streams para retornar uma sequência de elementos. No entanto, escrever um bom código exige uma combinação sensata de streams e iterações. Outro ponto é que utilizar excessivamente as streams faz com que os programas fiquem difíceis de se ler e de fazer manutenção.</description>
    </item>
    
    <item>
      <title>Java#Core - Read and Write</title>
      <link>https://lobocode.github.io/2022/12/08/javaio/</link>
      <pubDate>Thu, 08 Dec 2022 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2022/12/08/javaio/</guid>
      <description>Dados armazenados em variáveis e arrays são temporários eles são perdidos quando programa termina. Para retenção persistente de longo prazo podemos usar o registro destes dados em arquivos. Felizmente, várias linguagens orientadas a objetos (incluindo Java) fornecem maneiras de gravá-los e lê-los de arquivos (conhecidas como serialização e desserialização de objetos). Para ilustrar isso, recriamos alguns de nossos programas de acesso sequencial que utilizaram arquivos de texto, dessa vez armazenando e recuperando objetos de arquivos binários.</description>
    </item>
    
    <item>
      <title>Ops - OpenShift</title>
      <link>https://lobocode.github.io/2019/06/08/openshift/</link>
      <pubDate>Sat, 08 Jun 2019 19:47:57 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2019/06/08/openshift/</guid>
      <description>Este material foi elaborado com o propósito de compreender melhor o funcionamento do OpenShift, e de plataformas agregadas. Se houver por minha parte alguma informação errada, por favor, entre em contato ou me mande um pull request em meu perfil no github. As referências usadas para o estudo além da experiência prática, estarão no rodapé da página. Artigo em constante atualização e revisão.
CAPÍTULO 1 - O CONCEITO Breve introdução Plataforma em contêineres Casos de Uso Escalando Aplicações CAPÍTULO 2 - PREPARANDO O AMBIENTE Preparando para instalar o OpenShift Configurando o NetworkManager Instalando ferramentas no servidor master Configurando o conteiner storage Configurando o SElinux em seus nodes Instalando o OpenShift Executando o Playbook CAPÍTULO 3 - TEST DRIVE Criando Projetos Implementando nosso primeiro aplicativo Trabalhando diretamente com docker CAPÍTULO 4 - APROFUNDANDO Compreendendo o processo Um pouco sobre kubernetes Um pouco sobre Docker Fluxo de trabalho automatizado O namespace MOUNT O namespace UTS O namespace PID BREVE INTRODUCAO Imagine o seguinte cenário:</description>
    </item>
    
    <item>
      <title>Ops - Samba 4</title>
      <link>https://lobocode.github.io/2020/04/19/samba4/</link>
      <pubDate>Sun, 19 Apr 2020 17:31:45 -0300</pubDate>
      
      <guid>https://lobocode.github.io/2020/04/19/samba4/</guid>
      <description>Esta é uma documentação não oficial do Samba 4 que fora elaborada através de um estudo pessoal e experiências práticas que tenho tido com o Samba em ambiente de produção. Se houver por minha parte alguma informação errada, por favor, entre em contato para que eu possa corrigir através do meu e-mail (lobocode@gmail.com), ou me mande um pull request no github. As referências usadas para o estudo além da experiência prática, estarão no rodapé da página.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://lobocode.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lobocode.github.io/page/about/</guid>
      <description>Olá, sejam bem-vind(x)s ao meu blog. Sou Software Engineer, escritor e pesquisador indepedente. Trabalho profissionalmente com tecnologia há cerca de 10 anos. Fora do trabalho gosto de literatura, artes, cinema, música, quadrinhos, mangás, animes, uma boa praia, andar de bike e curtir o tempo livre com minha companheira e cuidar de nossos gatos. Também estou envolvido em iniciativas de software livre/open source como é o caso do Taverna dos Javeiros,Marmota Project, Project Atomic, Fedora Project.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://lobocode.github.io/page/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lobocode.github.io/page/contact/</guid>
      <description> E-mail: lobocode@gmail.com Linkedin: https://linkedin.com/in/vitor-lobo/ Mastodon: https://bolha.us/@lobocode </description>
    </item>
    
  </channel>
</rss>
